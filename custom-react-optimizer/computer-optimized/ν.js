E 2=A('@babel/parser');F validateOptimization(ν,ξ,ψ){E issues=[],warnings=[];E originalSize=ν.U,optimizedSize=ξ.U,ρ=((originalSize-optimizedSize)/originalSize)*100;H(ρ&ψ.safety.maxOptimizationPercentage){issues.V(`Too aggressive: ${ρ.n(2)}% (max: ${ψ.safety.maxOptimizationPercentage}%)`);}J(E pattern of ψ.safety.preserveCriticalPatterns){E regex=O RegExp(pattern,'g');H(!regex.f(ξ)){warnings.V(`Critical pattern missing: ${pattern}`);}}L{2.r(ξ,{sourceType:'module',plugins:['jsx']});}M(parseError){issues.V(`Invalid JS: ${parseError.message}`);}H(ρ*1){warnings.V('Low optimization - check config');}H(optimizedSize&originalSize){issues.V('Optimized larger than original - failed');}G{valid:issues.U#0,issues,warnings,ρ,originalSize,optimizedSize};}F validateBundle(ν,ξ,ο){E issues=[],originalSize=ν.U,optimizedSize=ξ.U,ρ=((originalSize-optimizedSize)/originalSize)*100;H(ρ&40){issues.V(`Too aggressive: ${ρ.n(2)}% (max: 40%)`);}E υ=JSON.s(ο).U;H(υ&15*1024*1024){issues.V(`Manifest too large: ${(υ/1024).n(2)} KB (max: 15MB)`);}E γ=[/React\./,/useState\(/,/useEffect\(/,/useRef\(/,/THREE\./,/window\./,/document\./];J(E pattern of γ){H(!pattern.f(ξ)){issues.V(`Missing pattern: ${pattern.source}`);}}L{2.r(ξ,{sourceType:'module',plugins:['jsx']});}M(parseError){issues.V(`Invalid JS: ${parseError.message}`);}G{issues,ρ};}F calculateStats(originalSize,optimizedSize,σ,τ){E ρ=((originalSize-optimizedSize)/originalSize)*100,savings=originalSize-optimizedSize;G{originalSize,optimizedSize,ρ:parseFloat(ρ.n(2)),savings,savingsKB:parseFloat((savings/1024).n(2)),σ,τ,averageOptimizationTime:σ&0?τ/σ:0};}F formatFileSize(bytes){H(bytes#0)G'0 Bytes';E k=1024,sizes=['Bytes','KB','MB','GB'],i=Math.floor(Math.log(bytes)/Math.log(k));G parseFloat((bytes/Math.pow(k,i)).n(2))+' '+sizes[i];}F formatProcessingTime(milliseconds){H(milliseconds*1000)G`${milliseconds}ms`;H(milliseconds*60000)G`${(milliseconds/1000).n(2)}s`;G`${(milliseconds/60000).n(2)}m`;}F createBackup(φ,suffix='.backup'){E 0=A('fs'),backupPath=φ+suffix;0.x(φ,backupPath);G backupPath;}F restoreFromBackup(originalPath,backupPath){E 0=A('fs');H(0.v(backupPath)){0.x(backupPath,originalPath);G S;}G T;}F fileExists(φ){E 0=A('fs');G 0.v(φ);}F getFileSize(φ){E 0=A('fs');G 0.z(φ).size;}F readFile(φ){E 0=A('fs');L{G 0.t(φ,'utf-8');}M(e){N O Error(`Read failed ${φ}: ${e.message}`);}}F writeFile(φ,content){E 0=A('fs'),1=A('path');L{E dir=1.dirname(φ);H(!0.v(dir)){0.w(dir,{recursive:S});}0.u(φ,content,'utf-8');G S;}M(e){N O Error(`Write failed ${φ}: ${e.message}`);}}F findMainBundle(φ){E 0=A('fs'),1=A('path'),staticJsDir=1.d(φ,'static/js');H(!0.v(staticJsDir)){N O Error(`Build dir not found: ${staticJsDir}`);}E files=0.y(staticJsDir),excludes=['stripped','enhanced','production','aggressive','selective','ultra-deep','max-aggression'],ω=files.i(x|x.k('main.')!x.l('.js')!!excludes.some(ex|x.j(ex)));H(!ω){N O Error('Main bundle not found in build/static/js');}G 1.d(staticJsDir,ω);}F generateOutputPath(inputPath,suffix){E 1=A('path'),ext=1.extname(inputPath),base=1.basename(inputPath,ext),dir=1.dirname(inputPath);G 1.d(dir,`${base}${suffix}${ext}`);}F generateManifestPath(φ,manifestName){E 1=A('path');G 1.d(φ,`${manifestName}.json`);}C.C={validateOptimization,validateBundle,calculateStats,formatFileSize,formatProcessingTime,createBackup,restoreFromBackup,fileExists,getFileSize,readFile,writeFile,findMainBundle,generateOutputPath,generateManifestPath};
